function [MTI,startTrig] = DisplayStimScript(stimScript, MTI, priorit,clearrect) %#ok<INUSD>%%  [MTI,STARTRIG] = DISPLAYSTIMSCRIPT (STIMSCRIPT, MTI, PRIORIT)%%  DisplayStimScript draws the stimScript to the screen, and gives the record of stimulus%  presentation times in MTI.  The time of the first frame is given in STARTTRIG.  It%  takes as arguments the STIMSCRIPT to be displayed, and also a precomputed MTI record.%  If PRIORIT is specified, the drawing is run with that priority.  Otherwise, the priority%  is determined automatically.%%  Bugs:  The system will hang if one tries to show a stimulus with clipping on the first%  run after booting.  As a work-around, either first run a script without any clipping%  or run the stimulus through one time at priority 0.%%  Questions?  vanhoosr@brandeis.edu%%%%doclear = 0; %#ok<NASGU>if nargin<2, MTI = DisplayTiming(stimScript); end;if nargin<3,        prioritylevel = MaxPriority(0,'WaitBlanking','SetClut','GetSecs');else    prioritylevel = priorit; end;switch computer % ispc does not work on MAC matlab version  case 'PCWIN'     prioritylevel = 2; % maximum on pc, see help priorityendif nargin==4, doclear = 1; end; %#ok<NASGU>if ~isloaded(stimScript), error('Cannot display unloaded stimulus'); end;HideCursor;StimWindowGlobals;StimSerialGlobals;ShowStimScreenl = length(MTI); %#ok<NASGU>trigger = getTrigger(stimScript);stimserial(StimSerialScriptOutPin,StimSerialScript,1);stimserial(StimSerialStimOutPin,StimSerialStim,1);startTrig = 0;%dummy = strcmp('',''); % I have no idea what this line was forswitch computer  case 'PCWIN'	% has no CopyQuickly mode    fstcopymode = 'srcCopy';  otherwise    fstcopymode = 'srcCopyQuickly';endif isnumeric( PsychtoolboxVersion) % i.e. version 2 or below    setclutstring = 'SetClut';else    setclutstring = 'LoadClut';endloop = { 		    'Screen(StimWindow,''WaitBlanking'');'    'StimSerial(''dtr'',StimSerialScript,0);'    'startTrig = GetSecs;'    'StimSerial(StimSerialScriptOutPin,StimSerialScript,1);'    'Screen(StimWindow,''WaitBlanking'');'    'for i=1:l,'    ' rect = Screen(MTI{i}.ds.offscreen(1),''Rect'');'    ' if trigger(i);'     % trigger    '  StimSerial(StimSerialStimOutPin,StimSerialStim,0);'    '  StimSerial(StimSerialStimOutPin,StimSerialStim,1);'    ' end;'     % CLUTANIM:     'if strcmp(MTI{i}.ds.displayType,''CLUTanim''),'      'if MTI{i}.preBGframes>=0,'       'Screen(StimWindow,''FillRect'',0);'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut_bg);']       % setdrawingregion is unavailable in ptb3:       'try;if (MTI{i}.ds.makeClip), Screen(StimWindow,''SetDrawingRegion'',MTI{i}.ds.clipRect,MTI{i}.ds.makeClip-1); end;catch;disp(''SetDrawingRegion is unavailable'');end;'       'MTI{i}.startStopTimes(1) = GetSecs;'       'Screen(''CopyWindow'',MTI{i}.ds.offscreen,StimWindow,rect, MTI{i}.df.rect,''srcCopy'');'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.preBGframes);'      'else,'       'if doclear,Screen(StimWindow,''FillRect'',0,clearrect);end;'       'if (MTI{i}.ds.makeClip), Screen(StimWindow,''SetDrawingRegion'',MTI{i}.ds.clipRect,MTI{i}.ds.makeClip-1); end;'       'MTI{i}.startStopTimes(1) = GetSecs;'       'Screen(''CopyWindow'',MTI{i}.ds.offscreen,StimWindow,rect, MTI{i}.df.rect,''srcCopy'');'      'end;'      'MTI{i}.startStopTimes(2) = GetSecs;'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut{MTI{i}.df.frames(1)});']      'MTI{i}.frameTimes(1) = GetSecs;'      'for frameNum=2:length(MTI{i}.df.frames);'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.pauseRefresh(frameNum-1));'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut{MTI{i}.df.frames(frameNum)});']       'MTI{i}.frameTimes(frameNum) = GetSecs;'      'end;'      'Screen(StimWindow,''WaitBlanking'',MTI{i}.pauseRefresh(end));'      'if (MTI{i}.postBGframes>=0),'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut_bg);']       'MTI{i}.startStopTimes(3) = GetSecs;'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.postBGframes);'       'MTI{i}.startStopTimes(4) = GetSecs;'      'else,'       'MTI{i}.startStopTimes(3) = GetSecs;'       'MTI{i}.startStopTimes(4) = GetSecs;'      'end;'       % setdrawingregion is unavailable in ptb3:      'try;if (MTI{i}.ds.makeClip), Screen(StimWindow,''SetDrawingRegion'',StimWindowRect); end;catch;disp(''SetDrawingRegion is unavailable'');end;'      % MOVIE:     'elseif strcmp(MTI{i}.ds.displayType,''Movie''),'      'if MTI{i}.preBGframes>=0,'            % preBGframes       'Screen(StimWindow,''FillRect'',0);'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut_bg);']       'MTI{i}.startStopTimes(1) = GetSecs;'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.preBGframes);'       'MTI{i}.startStopTimes(2) = GetSecs;'      'else,'          % no preBGframes       'MTI{i}.startStopTimes(1) = GetSecs;'       'MTI{i}.startStopTimes(2) = GetSecs;'      'end;'       % main movie      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut);']      'if (MTI{i}.ds.makeClip), Screen(StimWindow,''SetDrawingRegion'',MTI{i}.ds.clipRect,MTI{i}.ds.makeClip-1); end;'      ['Screen(''CopyWindow'',MTI{i}.ds.offscreen(MTI{i}.df.frames(1)),StimWindow,rect, MTI{i}.df.rect,''' fstcopymode ''');']       'MTI{i}.frameTimes(1) = GetSecs;'       'for frameNum=2:length(MTI{i}.df.frames);'        'Screen(StimWindow,''WaitBlanking'',MTI{i}.pauseRefresh(frameNum-1));'       ['Screen(''CopyWindow'',MTI{i}.ds.offscreen(MTI{i}.df.frames(frameNum)),StimWindow,rect, MTI{i}.df.rect,''' fstcopymode ''');']        'MTI{i}.frameTimes(frameNum) = GetSecs;'       'end;'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.pauseRefresh(end));'       'if (MTI{i}.postBGframes>=0),'         % postBGframes        ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut_bg);']        'MTI{i}.startStopTimes(3) = GetSecs;'        'Screen(StimWindow,''WaitBlanking'',MTI{i}.postBGframes);'        'MTI{i}.startStopTimes(4) = GetSecs;'       'else,'         % no postBGframes        'MTI{i}.startStopTimes(3) = GetSecs;'        'MTI{i}.startStopTimes(4) = GetSecs;'       'end;'       'if (MTI{i}.ds.makeClip), Screen(StimWindow,''SetDrawingRegion'',StimWindowRect); end;'     % CUSTOM:     'elseif strcmp(MTI{i}.ds.displayType,''custom''),'      'if MTI{i}.preBGframes>=0,'       'Screen(StimWindow,''FillRect'',0);'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut_bg);']       'MTI{i}.startStopTimes(1) = GetSecs;'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.preBGframes);'      'else,'       'MTI{i}.startStopTimes(1) = GetSecs;'      'end;'      'MTI{i}.startStopTimes(2) = GetSecs;'      'done=0;stamp=0;info=[];stampNum=1;'      'while(done==0),'       'eval([''[done,stamp,info]='' MTI{i}.ds.displayProc ''(info,StimWindow,MTI{i}.ds,MTI{i}.df);'']);'       'if stamp==1, MTI{i}.frameTimes(stampNum)=GetSecs; stampNum=stampNum+1; end;'      'end;'      'if (MTI{i}.postBGframes>=0),'      ['Screen(StimWindow,''' setclutstring ''',MTI{i}.ds.clut_bg);']       'MTI{i}.startStopTimes(3) = GetSecs;'       'Screen(StimWindow,''WaitBlanking'',MTI{i}.postBGframes);'       'MTI{i}.startStopTimes(4) = GetSecs;'      'else,'       'MTI{i}.startStopTimes(3) = GetSecs;'       'MTI{i}.startStopTimes(4) = GetSecs;'      'end;'     'end;'    'end;'    };Screen('Screens');if isnumeric( PsychtoolboxVersion) % i.e. version 2 or below    Rush(loop,prioritylevel);else    bigchar = [];    for i=1:length(loop),        bigchar = [ bigchar loop{i}]; %#ok<AGROW>    end;    try        eval(bigchar);    catch        CloseStimScreen;        error('DISPLAYSTIMSCRIPT: error in displaying script');    endendShowCursor;