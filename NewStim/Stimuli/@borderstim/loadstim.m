function [outstim] = loadstim(stim)%hupestim/loadstim%% 2009, Alexander Heimel%StimWindowGlobals;NewStimGlobals;stim = unloadstim(stim);  % unload old version before loadingparams = stim.params;width  = params.rect(3) - params.rect(1);height = params.rect(4) - params.rect(2);% set BG, figure and ground colorsclut_bg = repmat(params.BG,256,1);clut_usage = [ 1 1 1 zeros(1,255-2) ]';clut = repmat(params.BG,256,1);bg_color = 0;fig_color = 1;gnd_color = 2;clut(bg_color+1,:) = params.BG;clut(fig_color+1,:) = params.figcolor;clut(gnd_color+1,:) = params.gndcolor;dp = getdisplayprefs(stim.stimulus);dps = struct(dp);% set framerate if there is open stimscreenif ~isempty(StimWindowRefresh) 	dps.fps = 1/params.duration;	dps.frames = 1:2;	if isfield(dps,'defaults')		dps = rmfield(dps,'defaults');	end	stim = setdisplayprefs(stim,displayprefs(struct2vararg(dps)));end		n_frames = length(dps.frames);displayType = 'Movie';displayProc = 'standard';% initiate offscreen handle vector offscreen = zeros(1,n_frames);% compute rotation matrixangle = params.direction * pi /180;rotation = [ cos(angle) sin(angle); -sin(angle) cos(angle)];% compute figurefigsize_pixels = NewStimViewingDistance * atan( params.figsize *pi/180) * NewStimPixelsPerCm;figbasepoints = figsize_pixels * [ 0 1; 2 1; 2 -1; 0 -1 ];figbasepoints = (rotation * figbasepoints')';figbasepoints = figbasepoints + repmat(round(params.center),4,1);figpoints = figbasepoints;ShowStimScreen;for f  = 1:2    % new offscreen    offscreen(f) = Screen(StimWindow,'OpenOffscreenWindow',255,[0 0 width height]);    % set ground    Screen(offscreen(f),'FillRect',2)    % set figure    Screen(offscreen(f),'FillPoly',fig_color,figpoints)end    dS = {'displayType', displayType, 'displayProc', displayProc, ...    'offscreen', offscreen, 'frames', n_frames, 'depth', 8, ...    'clut_usage', clut_usage, 'clut_bg', clut_bg, 'clut', clut};outstim = stim;outstim.stimulus = setdisplaystruct(outstim.stimulus,displaystruct(dS));outstim.stimulus = loadstim(outstim.stimulus);